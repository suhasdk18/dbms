create database library;
use  library;

CREATE TABLE SALESMAN(SALESMAN_ID INTEGER PRIMARY KEY,NAME VARCHAR(20) , CITY VARCHAR(20) , COMMISSION VARCHAR(20) );
desc SALESMAN;
INSERT INTO SALESMAN (SALESMAN_ID, NAME, CITY, COMMISSION) 
values( 1000,'john','banglore' , '25%'),
( 2000 , 'ravi' , 'banglore' , '20%'),
( 3000 , 'kumar' , 'mysore' , '15%'),
 (4000, 'smith' , 'delhi' , '30%'),
 (5000 , 'harsha' , 'hydrabad' , '15%' );
 
 select * from SALESMAN;
 
CREATE TABLE CUSTOMER(
    CUSTOMER_ID INTEGER PRIMARY KEY,
    CUST_NAME VARCHAR(20),
    CITY VARCHAR(20),
    GRADE INTEGER,
    SALESMAN_ID INTEGER,
    FOREIGN KEY (SALESMAN_ID) REFERENCES SALESMAN(SALESMAN_ID) ON DELETE SET NULL
);

describe CUSTOMER;
INSERT INTO CUSTOMER (CUSTOMER_ID, CUST_NAME, CITY, GRADE, SALESMAN_ID)
VALUES 
(10, 'Preethi', 'Bangalore', 100, 1000),
(11, 'Vivek', 'Mangalore', 300, 1000),
(12, 'Bhaskar', 'Chennai', 400, 2000),
(13, 'Chethan', 'Bangalore', 200, 2000),
(14, 'Mamatha', 'Bangalore', 400, 3000);

select * from CUSTOMER;

CREATE TABLE ORDERS (
    ORD_NO INTEGER PRIMARY KEY,
    PURCHASE_AMT INT,
    ORD_DATE DATE,
    CUSTOMER_ID INTEGER NULL,
    SALESMAN_ID INTEGER NULL,
    FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID) ON DELETE SET NULL,
    FOREIGN KEY (SALESMAN_ID) REFERENCES SALESMAN(SALESMAN_ID) ON DELETE SET NULL
);

INSERT INTO ORDERS (ORD_NO, PURCHASE_AMT, ORD_DATE, CUSTOMER_ID, SALESMAN_ID) 
VALUES 
(50, 5000, '2017-05-04', 10, 1000),
(51, 450, '2017-05-20', 10, 2000),
(52, 1000, '2017-01-20', 13, 2000),
(53, 3500, '2017-04-13', 14, 3000),
(54, 550, '2017-03-09', 12, 2000);

select * from ORDERS;
CREATE TABLE SALESMAN(SALESMAN_ID INTEGER PRIMARY KEY,NAME VARCHAR(20) , CITY VARCHAR(20) , COMMISSION VARCHAR(20) );
DESC SALESMAN;
INSERT INTO SALESMAN VALUES(&SALESMAN_ID , '&NAME' , '&CITY' , '&COMMISSION');
SELECT * FROM SALESMAN;S
CREATE TABLE CUSTOMER(CUSTOMER_ID INTEGER PRIMARY KEY , CUST_NAME VARCHAR(20) ,CITY VARCHAR(20) , GRADE INTEGER , SALESMAN_ID REFERENCES SALESMAN(SALESMAN_ID) ON DELETE SET NULL );
INSERT INTO CUSTOMER VALUES(&CUSTOMER_ID , '&CUST_NAME' , '&CITY' , &GRADE , &SALESMAN_ID);
CREATE TABLE ORDERS (ORD_NO INTEGER PRIMARY KEY , PURCHASE_AMT NUMBER , ORD_DATE DATE,CUSTOMER_ID REFERENCES CUSTOMER(CUSTOMER_ID) ON DELETE SET NULL , SALESMAN_ID REFERENCES SALESMAN(SALESMAN_ID) ON DELETE SET NULL);
INSERT INTO ORDERS VALUES (&ORD_NO , &PURCHASE_AMT,'&ORD_DATE' , &CUSTOMER_ID , &SALESMAN_ID );


QUERIES:
1} SELECT GRADE , COUNT(CUSTOMER_ID) FROM CUSTOMER GROUP BY GRADE HAVING GRADE> (SELECT AVG(GRADE) FROM CUSTOMER WHERE CITY = 'Banglore');
2} SELECT S.SALESMAN_ID, S.NAME 
FROM SALESMAN S 
WHERE 1 < (
    SELECT COUNT(*) 
    FROM CUSTOMER C 
    WHERE C.SALESMAN_ID = S.SALESMAN_ID
);

3} SELECT S.SALESMAN_ID, S.NAME, C.CUST_NAME, S.COMMISSION
FROM SALESMAN S
JOIN CUSTOMER C ON S.CITY = C.CITY
UNION
SELECT S.SALESMAN_ID, S.NAME, 'NO_MATCH' AS CUST_NAME, S.COMMISSION
FROM SALESMAN S
WHERE S.CITY NOT IN (SELECT CITY FROM CUSTOMER);

4} CREATE VIEW E_SALESMAN AS 
SELECT B.ORD_DATE, A.SALESMAN_ID, A.NAME
FROM SALESMAN A
JOIN ORDERS B ON A.SALESMAN_ID = B.SALESMAN_ID
WHERE B.PURCHASE_AMT = (
    SELECT MAX(PURCHASE_AMT)
    FROM ORDERS C
    WHERE C.ORD_DATE = B.ORD_DATE
);
